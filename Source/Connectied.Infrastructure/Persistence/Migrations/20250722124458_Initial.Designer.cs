// <auto-generated />
using Connectied.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Connectied.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ConnectiedDbContext))]
    [Migration("20250722124458_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Connectied.Domain.GuestLists.GuestList", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ConfigurationId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("LinkCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.ToTable("GuestLists", "Connectied");
                });

            modelBuilder.Entity("Connectied.Domain.GuestLists.GuestListConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Columns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExcludedGuests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Groups")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncludedGuests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("GuestListConfigurations", "Connectied");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.Guest", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Event1Angpao")
                        .HasColumnType("int");

                    b.Property<int>("Event1Attendance")
                        .HasColumnType("int");

                    b.Property<bool>("Event1CheckedIn")
                        .HasColumnType("bit");

                    b.Property<int>("Event1Gift")
                        .HasColumnType("int");

                    b.Property<int>("Event1Quota")
                        .HasColumnType("int");

                    b.Property<int>("Event1RSVP")
                        .HasColumnType("int");

                    b.Property<int>("Event1RSVPStatus")
                        .HasColumnType("int");

                    b.Property<int>("Event1Souvenir")
                        .HasColumnType("int");

                    b.Property<int>("Event2Angpao")
                        .HasColumnType("int");

                    b.Property<int>("Event2Attendance")
                        .HasColumnType("int");

                    b.Property<bool>("Event2CheckedIn")
                        .HasColumnType("bit");

                    b.Property<int>("Event2Gift")
                        .HasColumnType("int");

                    b.Property<int>("Event2Quota")
                        .HasColumnType("int");

                    b.Property<int>("Event2RSVP")
                        .HasColumnType("int");

                    b.Property<int>("Event2RSVPStatus")
                        .HasColumnType("int");

                    b.Property<int>("Event2Souvenir")
                        .HasColumnType("int");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Guests", "Connectied");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.GuestGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Version")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("GuestGroups", "Connectied");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.GuestRegistry", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestRegistries", "Connectied");
                });

            modelBuilder.Entity("Connectied.Domain.GuestLists.GuestList", b =>
                {
                    b.HasOne("Connectied.Domain.GuestLists.GuestListConfiguration", "Configuration")
                        .WithMany()
                        .HasForeignKey("ConfigurationId");

                    b.Navigation("Configuration");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.Guest", b =>
                {
                    b.HasOne("Connectied.Domain.Guests.GuestGroup", "Group")
                        .WithMany("Guests")
                        .HasForeignKey("GroupId");

                    b.HasOne("Connectied.Domain.Guests.Guest", "Parent")
                        .WithMany("Members")
                        .HasForeignKey("ParentId");

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.GuestRegistry", b =>
                {
                    b.HasOne("Connectied.Domain.Guests.Guest", null)
                        .WithMany("EventRegistries")
                        .HasForeignKey("GuestId");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.Guest", b =>
                {
                    b.Navigation("EventRegistries");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("Connectied.Domain.Guests.GuestGroup", b =>
                {
                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
